CS-220 Spring 2017 Lab 11 				Due: April 17, 2018

1. Cut and paste a copy of your successful mix_in.txt file that creates a
   mix_out.bin file that invokes the target function:
   
2. Notice that the target function in target.c ends with an "exit(0)"
   invocation.  The "exit(0)" causes the target function to return directly to
   the operating system cleanup routine instead of to the function that called
   "target".  Change the target function to return false instead of exitting.
   What happened? Can you guess why?
   
3. If target.c had used fgets instead of gets, would your buffer overflow
   attack have been succesful? Why or why not?
   
4. Did the Makefile make this lab easier or harder to run?  Is it worth the
   time to build a correct Makefile so that dependencies are automatically
   taken care of?
   
5. When you run gdb, gdb turns off Address Space Layout Randomization (ASLR) by
   default. You can turn it back on in gdb by running the command: 
   	(gdb) set disable-randomization off
   	
   If you turn off layout randomization, does your buffer overflow attack still
   work under gdb? Can you figure out why or why not?
